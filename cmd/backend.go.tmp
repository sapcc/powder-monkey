package cmd

import (
	"fmt"
	"strconv"

	"github.com/sapcc/powder-monkey/dynomite"
	"github.com/spf13/cobra"
)

var (
	backendPort       int16
	backendPassword   string
	masterBackendPort int16
)

var backendCmd = &cobra.Command{
	Use:   "backend",
	Short: "Interact with dynomite backend",
}

var pingCmd = &cobra.Command{
	Use:   "ping",
	Short: "Ping dynomite backend",
	Run: func(cmd *cobra.Command, args []string) {
		host, _ := rootCmd.PersistentFlags().GetString("dynomite-host")
		redis := dynomite.NewRedis(host, strconv.FormatInt(int64(backendPort), 10), backendPassword)
		state := redis.Ping()
		fmt.Printf("Dynomite backend [%s] ping: %v\n", host, state)
	},
}

var warmupCmd = &cobra.Command{
	Use:   "warmup [master]",
	Short: "Warmup dynomite backend",
	Args:  cobra.ExactArgs(1),
	Run: func(cmd *cobra.Command, args []string) {
		host, _ := rootCmd.PersistentFlags().GetString("dynomite-host")
		redis := dynomite.NewRedis(host, strconv.FormatInt(int64(backendPort), 10), backendPassword)

		master := dynomite.NewRedis(args[0], strconv.FormatInt(int64(masterBackendPort), 10), backendPassword)
		state := redis.Warmup(*master)
		fmt.Printf("Dynomite backend [%s] ping: %v\n", host, state)
	},
}

func init() {
	backendCmd.PersistentFlags().Int16Var(&backendPort, "backend-port", 22122, "dynomite backend port")
	backendCmd.PersistentFlags().StringVar(&backendPassword, "backend-password", "", "dynomite backend password")
	backendCmd.AddCommand(pingCmd)

	warmupCmd.PersistentFlags().Int16Var(&masterBackendPort, "master-backend-port", 22122, "dynomite backend port")
	backendCmd.AddCommand(warmupCmd)

	rootCmd.AddCommand(backendCmd)
}
